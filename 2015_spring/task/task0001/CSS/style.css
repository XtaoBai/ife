/*
同一 rule set 下的属性在书写时，应按功能进行分组，
并以 Formatting Model（布局方式、位置） > Box Model（尺寸） 
> Typographic（文本相关） > Visual（视觉效果） 的顺序书写，以提高代码的可读性。


解释：

Formatting Model 相关属性包括：position / top / right / bottom / left / float / display / overflow 等

Box Model 相关属性包括：border / margin / padding / width / height 等

Typographic 相关属性包括：font / line-height / text-align / word-wrap 等

Visual 相关属性包括：background / color / transition / list-style 等

另外，如果包含 content 属性，应放在最前面。


清除浮动：

1. 当元素需要撑起

[建议] 当元素需要撑起高度以包含内部的浮动元素时，通过对伪类设置 clear
 或触发 BFC 的方式进行 clearfix。尽量不使用增加空标签的方式。
解释：

触发 BFC 的方式很多，常见的有：

float 非 none
position 非 static
overflow 非 visible
如希望使用更小副作用的清除浮动方法，参见 A new micro clearfix hack 一文。

另需注意，对已经触发 BFC 的元素不需要再进行 clearfix。


3.6 z-index
[建议] 将 z-index 进行分层，对文档流外绝对定位元素的视觉层级关系进行管理。
解释：

同层的多个元素，如多个由用户输入触发的 Dialog，在该层级内使用相同的 z-index 或递增 z-index。

建议每层包含100个 z-index 来容纳足够的元素，如果每层元素较多，可以调整这个数值。

[建议] 在可控环境下，期望显示在最上层的元素，z-index 指定为 999999。
解释：

可控环境分成两种，一种是自身产品线环境；还有一种是可能会被其他产品线引用，但是不会被外部第三方的产品引用。

不建议取值为 2147483647。以便于自身产品线被其他产品线引用时，当遇到层级覆盖冲突的情况，留出向上调整的空间。

[建议] 在第三方环境下，期望显示在最上层的元素，通过标签内联和 !important，将 z-index 指定为 2147483647。
解释：

第三方环境对于开发者来说完全不可控。在第三方环境下的元素，为了保证元素不被其页面其他样式定义覆盖，需要采用此做法。

*/


*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    /* 含义 */
    height: 100vh;
}


h1 {
    text-align: center;
}


body{
    background-color: rgba(211, 211, 211, 1);
}
ul li{
    list-style: none;
}

body{
    font-family: "SimSun", "SimHei", "Times New Roman", Times, serif;
}

header{
    position: relative;
    background-color:rgba(82,42,92,1);
    width: 100%;
    height: 80px;
}

/* [强制] 长度为 0 时须省略单位。 (也只有长度单位可省) */
menu{
    position: relative;
    left: 10%;
    
    display: flex;
    flex-direction:row;
    justify-content: space-between;
    align-items: flex-end;

    width:80%;
    height: 80px;

}


menu > div{
    margin:5px 0;
    color:white;
}


.logo{
    font-family: Arial, Helvetica, sans-serif;   
    font-size: larger;
    font-weight: 400;
}

.menu-ul{
    display: flex;
    flex-direction: row;
    justify-content: center;
    list-style: none;
    font-size: large;
    font-weight: 400;
}

.menu-ul > li{
    margin: 0 5px;
}


.icon{
    position: absolute;
    right: 0;
    margin: auto 10px;
    bottom: -4px;
}


/*  
强制：url() 函数中的路径不加引号。 
建议：url() 函数中的绝对路径可省去协议名。
示例：
*/

.banner{
    /* cover显示全部 */
    position: relative;
    width:100%;
    height: 100%;
    background-image: url(../design/banner-bg.jpg);
    background-size: cover;
}

/* 当数值为 0 - 1 之间的小数时，省略整数部分的 0。 */
.box{
    position: absolute;
    padding: 10px 10px 30px;
    left: 60%;
    right: 10%;
    bottom: 0;

    text-align: right;
    color: white;
    background: rgba(255,255,255,0) linear-gradient(to bottom,rgba(255,255,255,.7),rgba(255,255,255,.5), rgba(255,255,255,0));
}

.box h2{
    font-size: 14px;
}

/*
[建议] line-height 在定义文本段落时，应使用数值。
解释：

将 line-height 设置为数值，浏览器会基于当前元素设置的 font-size 进行再次计算。在不同字号的文本段落组合中，能达到较为舒适的行间间隔效果，避免在每个设置了 font-size 都需要设置 line-height。

当 line-height 用于控制垂直居中时，还是应该设置成与容器高度一致。

*/

.box p{
    font-size: 12px;
    line-height: 150%;
}

.main{
    position: relative;
    height: 400px;
    width: 80%;
    left: 10%;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    padding-top: 10px;  
}



.main .block{
    width: 320px;
    margin: 0 5px;
    background-color: white;
}

.main .block .pic{
    width: 300px;
    height: 180px;
    background-color: aquamarine;
    margin: 10px;
}

.main .block p {
    display: block;
    margin: 15px 30px 25px;
}

.introduction{
    position: relative;
    width: 100%;
    height: 500px;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;

}


.introduction::before {
    z-index: -1;
    position: absolute;
    content: "";
    top: 120px;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background-color: #fff;
}


.photo {
    width: 100%;
    height: 200px;

}

.photo .picture{
    z-index: 10;
    width: 160px;
    height: 160px;
    margin: 20px auto ;
    border-radius: 50%;
    background-color: bisque;
    border: 5px solid rgba(211, 211, 211, 1);
}

.name{
    margin: 0 auto;
    text-align: center;
    font-size: 20px;
    font-family:Century Gothic,serif;;
    color:black;
}


.more{
    width: 600px;
    margin: 20px auto;
    text-align: center;
    font-size: 20px;
    color: black;
}



.bottom{
    position: relative;
    width: 100%;
    height: 400px;
    display: flex;
    flex-direction: column;
    font-family:Arial, Helvetica, sans-serif;
    background-color: black;
    color:white;
}

.bottom .menu{
    border: 1px solid white;
    margin: 0 auto;
    width: 100%;
    height: 30px;
    text-align: center;
}

.bottom .menu-ul li{
    margin: 0 15px;
}



.grid{
    position: relative;
    display: grid;
    grid-template-columns: repeat(4, 1fr 2em) 1fr;
    width: 80%;
    margin: 50px 10% 80px ;
}


.grid li{
    width: 100%;
    margin: 5px 0;
    text-align: left;
}


/*
[强制] font-family 按「西文字体在前、中文字体在后」、
「效果佳 (质量高/更能满足需求) 的字体在前、效果一般的字体在后」的顺序编写，
最后必须指定一个通用字体族( serif / sans-serif )。

[强制] font-family 不区分大小写，但在同一个项目中，同样的 Family Name 大小写必须统一

[强制] 需要在 Windows 平台显示的中文内容，其字号应不小于 12px。



[建议] 需要在 Windows 平台显示的中文内容，不要使用除 normal 外的 font-style。其他平台也应慎用。
解释：
由于中文字体没有 italic 风格的实现，所有浏览器下都会 fallback 到 obilique 实现 (自动拟合为斜体)，
小字号下 (特别是 Windows 下会在小字号下使用点阵字体的情况下) 显示效果差，造成阅读困难。

[强制]font-weight 属性必须使用数值方式描述。
解释：

CSS 的字重分 100 – 900 共九档，但目前受字体本身质量和浏览器的限制，实际上支持 400 和 700 两档，分别等价于关键词 normal 和 bold。

浏览器本身使用一系列启发式规则来进行匹配，在 <700 时一般匹配字体的 Regular 字重，>=700 时匹配 Bold 字重。

但已有浏览器开始支持 =600 时匹配 Semibold 字重 (见此表)，故使用数值描述增加了灵活性，也更简短。


*/

.grid li:nth-child(1){
    font-family: "Cambria", "Cochin", serif;
    font-size: 20px;
    margin-bottom: 20px;
}



/*
[强制] RGB颜色值必须使用十六进制记号形式 #rrggbb。不允许使用 rgb()
[强制] 颜色值可以缩写时，必须使用缩写形式。
[强制] 颜色值不允许使用命名色值。???
[建议] 颜色值中的英文字符采用小写。如不用小写也需要保证同一项目内保持大小写一致。
*/

.grid li:nth-child(3):hover{
/*  color:red; */
    color: rgba(255, 0, 0, 1);
}

.element1{
    grid-column: 1;
}

.element2{
    grid-column: 3;
}

.element3 {
    grid-column: 5;
}

.element4 {
    grid-column: 7;
}

.element5{
    grid-column: 9;
}


.end{
    position: absolute;
    width: 100%;
    bottom: 0;
}

.end .text{
    text-align: center;
}

.end .link{
    width: 34px;
    margin: 0 auto;
}

/* 博客页面 */


/*
2D 位置
[强制] 必须同时给出水平和垂直方向的位置。
*/

.wrap{
    /*这个地方一定需要重构*/
    position: relative;
    display: grid;
    grid-template-columns: 800px 180px;
    width: 980px;
    margin-top: 10px;
    left: 10%;
}

.section {
    display: flex;
    flex-direction: column;
    width: 780px;
    margin-bottom: 8px;
    
    padding: 0 5px;
    
    font-family: Arial, Helvetica, sans-serif;
    background-color: rgba(255,255,255,1);
    color: #000;

}

.section:last-child {
    margin-bottom: 0;
}

.info {
    position: absolute;
    left: -80px;
    width: 80px;
    height: 100px;
    color: #fff;
    text-align: center;
    font-size: 20px;
    font-family: Arial, Helvetica, sans-serif;
}

.cate {
    padding-top: 15px;
    padding-bottom: 15px;
    background-color: rgba(82,42,92,1);
}

.date {
    padding-top: 15px;
    padding-bottom: 15px;
    background-color: rgba(166, 96, 183, 1);
}

.section h3 {
    margin-bottom: .5em;
    margin-top: 1em;
    color: rgba(166, 96, 183, 1);
    font-size: 16px;
}

.section h4 {
    margin: .5em 0;
    color: #666;
    font-size: 12px;
}

.section p {
    margin: .5em 0;
    font-size: 12px;
}

.artical-info {
    display: table-cell;
    vertical-align: text-bottom;
    text-align: end;
    color: #666;
    font-size: 12px;
}

.page{
    width: 800px;
    display: flex;
    flex-direction: row;
    justify-content: center;
}

.page a{
    /* 有问题*/
    text-align: center;
    margin: 0 4px;
    padding: 0.5em 0.5em;
    background-color: #fff;
}

.page li :hover {
    /* 有问题 */
    color: #fff;
    background-color: rgba(166, 96, 183, 1);
}


.search {
    display: grid;
    grid-template-columns: 120px 50px;
    background-color: #fff;
}


.search-input {
    width: 100px;
    height: 34px;
    margin: 10px;
    margin-left: 20px;
    margin-right: 0px;
    border: 1px solid #ccc;
}

.search .btn {
    width: 40px;
    height: 22px;
    margin: 10px;
    margin-left: 0px;
    background-color: #ccc;
    text-align: center;
    padding:  7px 0;
    font-size: 20px;
    font-weight: 800;
    color: #fff;

}


.category ul {
    display: flex;
    flex-direction: column;
    width:180px;
    background-color: #fff;
}

.category ul a {
    display: block;
    line-height: 40px;
    padding-left: 15px;
    border-bottom: 1px solid rgba(211, 211, 211, 1);
    border-left: 4px solid rgba(166, 96, 183, 1); 
}

.category ul a:hover {
    border-left: 4px solid rgba(82,42,92,1);
}

/* 相簿内容 */

/* 标签内容 */
/* 激活样式？？？*/

.ablum{
    position: relative;
    margin-top: 0;
}

.mainside {
    border-left: 1px solid #fff;
}

.label ul {
    position: relative;
    display: flex;
    flex-direction: row;
    margin-bottom: 0;
    left: 10%;
}


.label ul li {
    line-height: 40px;
    padding: 0 20px;
    background-color: #fff;
    border: 1px solid rgba(211, 211, 211, 1);
}

.label ul li:nth-child(1){
    border-top: 3px solid  rgba(223, 198, 230, 1);
}

.label ul li:nth-child(2) {
    border-top: 3px solid rgba(82,42,92,1);
}

.label ul li:nth-child(3) {
    border-top: 3px solid rgba(89, 0, 178,1);
}

.label ul li:nth-child(4) {
    border-top: 3px solid rgba(140, 35, 0,1);
}

.label ul li:nth-child(5) {
    border-top: 3px solid rgba(217, 163, 0,1);
}


.label ul li:hover {
    border-bottom: 1px solid #fff ;
}


.mainside .picture-fall{
    display: grid;
    grid-gap: 12px;
    grid-template-columns: 168px 168px 192px 192px;
    grid-auto-rows: minmax(50px, auto);
    width: 770px;
    padding-left:20px;
    padding-top: 15px;
    color: #fff;
    background-color: #fff;
    padding-right: 5px;
    margin-right: 5px;
}


/* 模块 */
.picture-fall img {
    width: 100%;
}
/* 背景色 */
.picture-fall .JavaScript-util-functions {
    background-color: rgba(82,42,92,1);
}

.picture-fall .UI-components {
    background-color: rgba(166, 96, 183, 1);
}

.picture-fall .framework {
    background-color: rgba(140, 35, 0,1);
}

.picture-fall .application {
    background-color: rgba(217, 163, 0,1);
}

/* 圆圈 */


.picture-fall .picture >div {
    width: 35px;
    height: 35px;
    border: 1px solid #fff;
    border-radius: 50%;
    font-size: 30px;
    text-align: center;
    line-height: 35px;
}


.picture-fall > div:nth-child(1) {
    grid-row: 1 ;
    grid-column: 1 / 3;
  }
  
  .picture-fall > div:nth-child(2) {
    grid-row: 1 ;
    grid-column: 3;
  }
  
  .picture-fall > div:nth-child(3) {
    grid-row: 1 ;
    grid-column: 4;
  }
  

  .picture-fall > div:nth-child(4) {
    grid-row: 2 ;
    grid-column: 1;
  }
  
  .picture-fall > div:nth-child(5) {
     grid-row: 2 ;
    grid-column: 2;
  }

  .picture-fall > div:nth-child(6) {
    grid-row: 2 ;
    grid-column: 3;
  }
  
  .picture-fall > div:nth-child(7) {
    grid-row: 2 ;
    grid-column: 4;
  }
  
  .picture-fall > div:nth-child(8) {
     grid-row: 3 ;
    grid-column: 1;
  }

  .picture-fall > div:nth-child(9) {
    grid-row: 3 ;
   grid-column: 2;
 }

 .picture-fall > div:nth-child(10) {
    grid-row: 3 ;
   grid-column: 3;
 }


/* timeline */


.cards {
    display: flex;
    position: relative;
    flex-direction: column;
    left: 10%;
    width: 980px;
    background-color: #fff;
} 

.card {
    position: relative;
    width: 980px;
    display: flex;
    flex-direction: column;
    border: 1px dashed darkgoldenrod;
}


.card .card-picture {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    border: 1px dashed red;
}

.card-picture picture {
    z-index: 10;
    width: 100px;
    height: 100px;
    border-radius: 50px;
    border: 4px solid rgba(211, 211, 211, 1);
    margin: 30px 0;
    background-color: #134857;
    overflow: hidden;
}

.card .card-article {
    display: flex;
    flex-direction: row;
    height: 150px;
    border: 1px dashed blue;
}

.card .card-title {
    display: flex;
    align-items: flex-start;
    justify-content: center;
    width: 50%;
    border:1px dashed #134857;
}

.card .content {
    margin-left: 30px;
}

.card p {
    text-indent: 2em;
} 

.cards::after{
    z-index: 9;
    content: "";
    position: absolute;
    top: 80px;
    bottom: 0;
    left: 50%;
    border-left:4px solid rgba(211, 211, 211, 1) ;
}

.cards::before{
    z-index: 9;
    content: "";
    position: absolute;
    top: 0;
    height: 100px;
    width: 100%;
    background-color: rgba(211, 211, 211, 1);
}




.card:first-child picture{
    z-index: 10;
    width: 160px;
    height: 160px;
    border-radius: 80px;
    border: 5px solid rgba(211, 211, 211, 1);
    margin: 30px 0;
    background-color: #134857;
    overflow: hidden;
}
